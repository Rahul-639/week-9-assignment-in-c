#include <stdio.h>
#include <stdlib.h>
int* findDuplicates(int arr[], int n, int* returnSize) {
    int* freq = (int*)calloc(n + 1, sizeof(int)); 
    int* result = (int*)malloc(n * sizeof(int)); 
    *returnSize = 0;
    for (int i = 0; i < n; i++) {
        freq[arr[i]]++;
        if (freq[arr[i]] == 2) {
            result[*returnSize] = arr[i];
            (*returnSize)++;
        }
    }
    free(freq);
    return result;
}
int cmp(const void* a, const void* b) {
    return (*(int*)a - *(int*)b);
}
int main() {
    int arr[] = {2, 3, 1, 2, 3};
    int n = sizeof(arr) / sizeof(arr[0]);
    int returnSize = 0;
    int* duplicates = findDuplicates(arr, n, &returnSize);
    if (returnSize == 0) {
        printf("[]\n");
    } else {
        qsort(duplicates, retu
        printf("[");
        for (int i = 0; i < returnSize; i++) {
            printf("%d", duplicates[i]);
            if (i < returnSize - 1) printf(", ");
        }
        printf("]\n");
    }
    free(uplicates);
    return 0;
}
