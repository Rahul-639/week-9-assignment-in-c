#include <stdio.h>
#include <stdlib.h>
#include <limits.h>



int findCheapestPrice(int n, int flights[][3], int flightsSize, int src, int dst, int k) {
    int *dist = (int*)malloc(n * sizeof(int));
    int *temp = (int*)malloc(n * sizeof(int));

    for (int i = 0; i < n; i++) dist[i] = INF;
    dist[src] = 0;

   
    for (int i = 0; i <= k; i++) {
        for (int j = 0; j < n; j++) temp[j] = dist[j];

        for (int f = 0; f < flightsSize; f++) {
            int u = flights[f][0], v = flights[f][1], w = flights[f][2];
            if (dist[u] != INF && dist[u] + w < temp[v]) {
                temp[v] = dist[u] + w;
            }
        }

        for (int j = 0; j < n; j++) dist[j] = temp[j];
    }

    int ans = dist[dst];
    free(dist);
    free(temp);
    return (ans == INF) ? -1 : ans;
}

int main() {
    int flights[][3] = {
        {0, 1, 100},
        {1, 2, 100},
        {2, 0, 100},
        {1, 3, 600},
        {2, 3, 200}
    };
    int n = 4, flightsSize = sizeof(flights)/sizeof(flights[0]);
    int src = 0, dst = 3, k = 1;

    printf("%d\n", findCheapestPrice(n, flights, flightsSize, src, dst, k));
   

    return 0;
}
